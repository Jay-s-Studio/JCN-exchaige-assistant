name: Docker Image CI

on:
  push:
    branches:
      - main
    tags:
      - "*"


env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}


jobs:
  build-docker:
    runs-on: ubuntu-latest
    name: "Docker build"
    steps:
      - uses: actions/checkout@v3
      - name: Build the Docker image
        id: build-image
        run: |-
          #!/usr/bin/env bash
          set -euo pipefail
          
          log() { COLOR=${1} ; shift ; echo -e "\033[1;${COLOR}m${*}\033[m" ; }
          exec_echo() { CMD=$@ ; log 33 "> $@" >&2 ; "${@}" ; return $? ; }
          
          [[ $(expr match "$GITHUB_REF" '^refs/heads') != 0 ]] && export CI_COMMIT_REF_NAME=${GITHUB_REF#refs/heads/}
          [[ $(expr match "$GITHUB_REF" '^refs/tags') != 0 ]] && export CI_COMMIT_TAG=${GITHUB_REF#refs/tags/}
          export CI_COMMIT_SHORT_SHA=$(git rev-parse --short HEAD)
          export CI_PIPELINE_ID=${GITHUB_RUN_ID}
          export CI_PROJECT_DIR=${GITHUB_WORKSPACE}
          
          echo "IMAGE_NAME=${env.IMAGE_NAME}"
          echo "CI_COMMIT_REF_NAME=${CI_COMMIT_REF_NAME}"
          echo "CI_COMMIT_TAG=${CI_COMMIT_TAG}"
          echo "CI_COMMIT_SHORT_SHA=${CI_COMMIT_SHORT_SHA}"
          echo "CI_PIPELINE_ID=${CI_PIPELINE_ID}"
          echo "CI_PROJECT_DIR=${CI_PROJECT_DIR}"
          
          # docker build . --file Dockerfile --tag my-image-name:$(date +%s)
