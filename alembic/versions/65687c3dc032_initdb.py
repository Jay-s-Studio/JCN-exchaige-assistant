"""initdb

Revision ID: 65687c3dc032
Revises: 
Create Date: 2024-01-28 19:01:21.828407

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '65687c3dc032'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('telegram_account',
    sa.Column('id', sa.BigInteger(), nullable=False, comment='Account ID'),
    sa.Column('username', sa.String(length=255), nullable=True, comment='Username'),
    sa.Column('first_name', sa.String(length=255), nullable=True, comment='First Name'),
    sa.Column('last_name', sa.String(length=255), nullable=True, comment='Last Name'),
    sa.Column('full_name', sa.String(length=255), nullable=True, comment='Full Name'),
    sa.Column('name', sa.String(length=255), nullable=True, comment='Name'),
    sa.Column('language_code', sa.String(length=255), nullable=True, comment='Language Code'),
    sa.Column('is_bot', sa.Boolean(), nullable=True, comment='Is Bot'),
    sa.Column('is_premium', sa.Boolean(), nullable=True, comment='Is Premium'),
    sa.Column('link', sa.String(length=255), nullable=True, comment='Link'),
    sa.Column('created_by_id', sa.UUID(), nullable=True, comment='Create User ID'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='Create Date'),
    sa.Column('created_by', sa.String(length=64), nullable=False, comment='Create User Name'),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='Update Date'),
    sa.Column('updated_by_id', sa.UUID(), nullable=True, comment='Update User ID'),
    sa.Column('updated_by', sa.String(length=32), nullable=False, comment='Update User Name'),
    sa.Column('delete_reason', sa.String(length=64), nullable=True, comment='Delete Reason'),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('false'), nullable=False, comment='Is Deleted(Logical Delete)'),
    sa.Column('description', sa.Text(), nullable=True, comment='Description'),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_table('telegram_chat_group',
    sa.Column('id', sa.BigInteger(), nullable=False, comment='Chat Group ID'),
    sa.Column('title', sa.String(length=255), nullable=True, comment='Title'),
    sa.Column('type', sa.String(length=255), nullable=True, comment='Type'),
    sa.Column('in_group', sa.Boolean(), nullable=True, comment='In Group'),
    sa.Column('bot_type', sa.String(length=255), nullable=True, comment='Bot Type'),
    sa.Column('created_by_id', sa.UUID(), nullable=True, comment='Create User ID'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='Create Date'),
    sa.Column('created_by', sa.String(length=64), nullable=False, comment='Create User Name'),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='Update Date'),
    sa.Column('updated_by_id', sa.UUID(), nullable=True, comment='Update User ID'),
    sa.Column('updated_by', sa.String(length=32), nullable=False, comment='Update User Name'),
    sa.Column('delete_reason', sa.String(length=64), nullable=True, comment='Delete Reason'),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('false'), nullable=False, comment='Is Deleted(Logical Delete)'),
    sa.Column('description', sa.Text(), nullable=True, comment='Description'),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_table('user',
    sa.Column('username', sa.String(length=255), nullable=True, comment='Username'),
    sa.Column('display_name', sa.String(length=255), nullable=True, comment='Display Name'),
    sa.Column('hash_password', sa.String(length=255), nullable=True, comment='Hash Password'),
    sa.Column('password_salt', sa.String(length=255), nullable=True, comment='Password Salt'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='Is Active'),
    sa.Column('last_login', sa.DateTime(), nullable=True, comment='Last Login'),
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False, comment='Primary Key'),
    sa.Column('created_by_id', sa.UUID(), nullable=True, comment='Create User ID'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='Create Date'),
    sa.Column('created_by', sa.String(length=64), nullable=False, comment='Create User Name'),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False, comment='Update Date'),
    sa.Column('updated_by_id', sa.UUID(), nullable=True, comment='Update User ID'),
    sa.Column('updated_by', sa.String(length=32), nullable=False, comment='Update User Name'),
    sa.Column('delete_reason', sa.String(length=64), nullable=True, comment='Delete Reason'),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('false'), nullable=False, comment='Is Deleted(Logical Delete)'),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_table('telegram_account_group_relation',
    sa.Column('account_id', sa.BigInteger(), nullable=False, comment='Account ID'),
    sa.Column('chat_group_id', sa.BigInteger(), nullable=False, comment='Chat Group ID'),
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False, comment='Primary Key'),
    sa.ForeignKeyConstraint(['account_id'], ['public.telegram_account.id'], name='telegram_account_relation_account_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['chat_group_id'], ['public.telegram_chat_group.id'], name='telegram_account_relation_chat_group_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('account_id', 'chat_group_id', name='unique_telegram_account_group_relation_uc'),
    schema='public'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('telegram_account_group_relation', schema='public')
    op.drop_table('user', schema='public')
    op.drop_table('telegram_chat_group', schema='public')
    op.drop_table('telegram_account', schema='public')
    # ### end Alembic commands ###
